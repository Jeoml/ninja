================================================================================
                    ROUND 1 QUIZ API DOCUMENTATION
================================================================================

OVERVIEW
--------
The Round 1 Quiz API provides a chat-based quiz interface with intelligent topic 
performance tracking. It's designed to assess user knowledge across different 
topics through 10-15 easy questions, with smart question selection and 
comprehensive performance analytics.

BASE URL: /ai-agents/round1

================================================================================
                                API ENDPOINTS
================================================================================

1. START QUIZ SESSION
---------------------
POST /ai-agents/round1/start

Description:
    Initiates a new quiz session with configurable question count.

Request Body:
    {
        "max_questions": 15  // Optional, defaults to 15
    }

Response:
    {
        "success": true,
        "message": "Quiz session started! You'll be asked up to 15 questions.",
        "data": {
            "max_questions": 15,
            "available_questions": 30,
            "database_stats": {
                "total_questions": 100,
                "easy_questions": 80,
                "available_topics": 12,
                "topic_distribution": [...]
            },
            "session_id": "round1_1234"
        }
    }

Features:
    - Fetches 10-15 easy questions from database
    - Focuses on different topics for comprehensive assessment
    - Initializes performance tracking system
    - Provides database statistics

================================================================================

2. GET NEXT QUESTION
--------------------
GET /ai-agents/round1/question

Description:
    Retrieves the next question in the quiz sequence with intelligent topic 
    selection.

Response:
    {
        "success": true,
        "message": "Question 1 of 15",
        "data": {
            "question_id": 42,
            "question": "What is the capital of France?",
            "options": {
                "A": "London",
                "B": "Paris", 
                "C": "Berlin",
                "D": "Madrid"
            },
            "topic": "Geography",
            "question_number": 1,
            "total_questions": 15,
            "progress": 6.67
        }
    }

Features:
    - Intelligent question selection based on performance
    - Covers different topics systematically
    - Tracks progress through quiz
    - Returns multiple choice format (A, B, C, D)

Error Responses:
    - 400: "No active quiz session. Please start a quiz first."
    - 500: "Failed to get question: [error details]"

================================================================================

3. SUBMIT ANSWER
----------------
POST /ai-agents/round1/answer

Description:
    Submits user's answer for the current question and provides feedback.

Request Body:
    {
        "answer": "B"  // Must be A, B, C, or D
    }

Response:
    {
        "success": true,
        "message": "Answer submitted successfully",
        "data": {
            "is_correct": true,
            "user_answer": "B",
            "correct_answer": "B",
            "correct_option": "Paris",
            "topic": "Geography",
            "explanation": "‚úÖ Correct! Great job on this Geography question.",
            "quiz_completed": false,
            "questions_remaining": 14
        }
    }

Final Question Response (when quiz ends):
    {
        "success": true,
        "message": "Answer submitted successfully",
        "data": {
            "is_correct": false,
            "user_answer": "A",
            "correct_answer": "C",
            "correct_option": "Berlin",
            "topic": "History",
            "explanation": "‚ùå Incorrect. This was a History question - consider reviewing this topic.",
            "quiz_completed": true,
            "final_results": {
                "total_questions": 15,
                "correct_answers": 12,
                "incorrect_answers": 3,
                "accuracy": 0.8,
                "topics_attempted": 8,
                "solved_topics": ["Geography", "Science", "Math"],
                "unsolved_topics": ["History", "Literature"],
                "topic_breakdown": {...}
            }
        }
    }

Features:
    - Validates answer format (A, B, C, D)
    - Updates topic performance catalog
    - Provides immediate feedback with explanations
    - Tracks solved/unsolved topics
    - Returns final results when quiz completes

Error Responses:
    - 400: "No active question to answer"
    - 400: "Invalid answer format. Please choose A, B, C, or D."
    - 500: "Failed to submit answer: [error details]"

================================================================================

4. GET PERFORMANCE SUMMARY
--------------------------
GET /ai-agents/round1/performance

Description:
    Retrieves current performance statistics and topic breakdown.

Response:
    {
        "success": true,
        "message": "Current performance retrieved",
        "data": {
            "total_questions": 8,
            "correct_answers": 6,
            "incorrect_answers": 2,
            "accuracy": 0.75,
            "topics_attempted": 5,
            "solved_topics": ["Geography", "Science"],
            "unsolved_topics": ["History", "Literature", "Math"],
            "topic_breakdown": {
                "Geography": {
                    "correct": 2,
                    "incorrect": 0,
                    "total": 2,
                    "accuracy": 1.0,
                    "status": "solved"
                },
                "History": {
                    "correct": 0,
                    "incorrect": 1,
                    "total": 1,
                    "accuracy": 0.0,
                    "status": "unsolved"
                }
            }
        }
    }

Features:
    - Real-time performance tracking
    - Topic-wise accuracy breakdown
    - Solved vs unsolved topic classification
    - Overall accuracy calculation

================================================================================

5. GET QUIZ STATUS
------------------
GET /ai-agents/round1/status

Description:
    Returns current quiz session status and progress information.

Response:
    {
        "success": true,
        "message": "Quiz status retrieved",
        "data": {
            "is_active": true,
            "questions_asked": 5,
            "max_questions": 15,
            "has_current_question": false,
            "current_question_id": null
        }
    }

Features:
    - Shows if quiz is currently active
    - Displays progress information
    - Indicates if there's a pending question
    - Tracks current question ID

================================================================================

6. END QUIZ SESSION
-------------------
POST /ai-agents/round1/end

Description:
    Manually ends the current quiz session and provides final results.

Response:
    {
        "success": true,
        "message": "Quiz completed! You answered 10 questions.",
        "data": {
            "quiz_completed": true,
            "questions_answered": 10,
            "final_results": {
                "total_questions": 10,
                "correct_answers": 8,
                "incorrect_answers": 2,
                "accuracy": 0.8,
                "topics_attempted": 6,
                "solved_topics": ["Geography", "Science", "Math"],
                "unsolved_topics": ["History", "Literature"],
                "topic_breakdown": {...}
            },
            "session_history": [
                {
                    "question": {...},
                    "user_answer": "B",
                    "correct_answer": "B",
                    "is_correct": true,
                    "topic": "Geography"
                }
            ],
            "recommendations": {
                "overall_performance": "excellent",
                "strong_topics": ["Geography", "Science", "Math"],
                "topics_to_review": ["History", "Literature"],
                "next_steps": [
                    "You're doing great! Ready for more challenging questions.",
                    "Pay special attention to: History, Literature"
                ]
            }
        }
    }

Features:
    - Provides comprehensive final performance summary
    - Shows complete session history
    - Generates personalized study recommendations
    - Classifies overall performance level

Error Responses:
    - 400: "No active quiz session to end"
    - 500: "Failed to end quiz: [error details]"

================================================================================

7. RESET SESSION
----------------
POST /ai-agents/round1/reset

Description:
    Resets the current quiz session while preserving performance history.

Response:
    {
        "success": true,
        "message": "Session reset successfully",
        "data": null
    }

Features:
    - Clears current question and progress
    - Keeps performance history intact
    - Allows starting fresh quiz session
    - Maintains topic performance catalog

================================================================================

8. CHAT INTRODUCTION
--------------------
GET /ai-agents/round1/chat/intro

Description:
    Provides a friendly introduction to the Round 1 quiz system.

Response:
    {
        "message": "üéØ Welcome to Round 1 Quiz!\n\nI'll ask you 10-15 easy questions from different topics to assess your knowledge.\n\nHere's how it works:\n‚Ä¢ Each question has 4 options (A, B, C, D)\n‚Ä¢ I'll track which topics you're strong in vs need work\n‚Ä¢ If you get a topic right AND wrong, I'll mark it as 'solved'\n‚Ä¢ I'll try to ask questions from different topics\n\nReady to start? Use `/ai-agents/round1/start` to begin!",
        "available_commands": [
            "POST /ai-agents/round1/start - Start quiz",
            "GET /ai-agents/round1/question - Get next question",
            "POST /ai-agents/round1/answer - Submit answer",
            "GET /ai-agents/round1/performance - View performance",
            "GET /ai-agents/round1/status - Check quiz status"
        ]
    }

================================================================================

9. CHAT HELP
------------
GET /ai-agents/round1/chat/help

Description:
    Provides detailed help and usage examples for the quiz system.

Response:
    {
        "message": "ü§ñ Round 1 Quiz Help\n\n**Chat Flow:**\n1. Start: `POST /start` with optional max_questions\n2. Get Question: `GET /question`\n3. Answer: `POST /answer` with {\"answer\": \"A/B/C/D\"}\n4. Repeat steps 2-3 until quiz ends\n5. View Results: `GET /performance`\n\n**Key Features:**\n‚Ä¢ ‚úÖ Solved topics: You got them right\n‚Ä¢ ‚ùå Unsolved topics: You need to review these\n‚Ä¢ üéØ Smart question selection: Focuses on different topics\n‚Ä¢ üìä Performance tracking: See your progress\n\n**Example Usage:**\n```\nPOST /start {\"max_questions\": 12}\nGET /question\nPOST /answer {\"answer\": \"B\"}\nGET /performance\n```"
    }

================================================================================

10. DATABASE TEST
-----------------
GET /ai-agents/round1/db/test

Description:
    Tests database connection and provides basic statistics.

Response:
    {
        "success": true,
        "message": "Database connection successful!",
        "test_result": 1,
        "database_stats": {
            "total_questions": 100,
            "easy_questions": 80
        }
    }

Error Response:
    {
        "success": false,
        "message": "Database connection failed: [error details]",
        "error": "Connection timeout"
    }

================================================================================
                                DATA MODELS
================================================================================

ANSWER CHOICE ENUM
------------------
Valid answer choices for quiz questions:
- A
- B  
- C
- D

QUIZ START REQUEST
------------------
{
    "max_questions": 15  // Optional integer, defaults to 15
}

SUBMIT ANSWER REQUEST
---------------------
{
    "answer": "B"  // Required, must be A, B, C, or D
}

QUIZ RESPONSE (Standard Response Format)
----------------------------------------
{
    "success": boolean,      // Operation success status
    "message": string,       // Human-readable message
    "data": object | null    // Response data or null
}

QUESTION DATA
-------------
{
    "question_id": 42,
    "question": "What is the capital of France?",
    "options": {
        "A": "London",
        "B": "Paris",
        "C": "Berlin", 
        "D": "Madrid"
    },
    "topic": "Geography",
    "question_number": 1,
    "total_questions": 15,
    "progress": 6.67
}

ANSWER RESULT
-------------
{
    "is_correct": true,
    "user_answer": "B",
    "correct_answer": "B", 
    "correct_option": "Paris",
    "topic": "Geography",
    "explanation": "‚úÖ Correct! Great job on this Geography question.",
    "quiz_completed": false,
    "questions_remaining": 14,
    "final_results": {...}  // Only present when quiz_completed is true
}

PERFORMANCE SUMMARY
-------------------
{
    "total_questions": 10,
    "correct_answers": 8,
    "incorrect_answers": 2,
    "accuracy": 0.8,
    "topics_attempted": 6,
    "solved_topics": ["Geography", "Science"],
    "unsolved_topics": ["History", "Literature"],
    "topic_breakdown": {
        "Geography": {
            "correct": 2,
            "incorrect": 0,
            "total": 2,
            "accuracy": 1.0,
            "status": "solved"
        }
    }
}

QUIZ STATUS
-----------
{
    "is_active": true,
    "questions_asked": 5,
    "max_questions": 15,
    "has_current_question": false,
    "current_question_id": null
}

================================================================================
                            INTELLIGENT FEATURES
================================================================================

SMART QUESTION SELECTION
------------------------
The system uses intelligent algorithms to select questions:

1. **Topic Diversity**: Prioritizes questions from different topics
2. **Performance-Based**: Adjusts selection based on user performance
3. **Unattempted Topics**: Gives priority to topics not yet attempted
4. **Solved Topic Logic**: If a topic has both correct and incorrect answers, 
   it's marked as "solved" (user understands the topic)
5. **Avoids Repetition**: Ensures no question is asked twice in a session

TOPIC PERFORMANCE TRACKING
---------------------------
- **Solved Topics**: Topics where user has demonstrated understanding
- **Unsolved Topics**: Topics that need review and practice
- **Mixed Performance**: Topics with both correct/incorrect answers are 
  considered "solved" (shows understanding despite some mistakes)
- **Real-time Updates**: Performance is updated after each answer

RECOMMENDATION ENGINE
---------------------
The system provides personalized recommendations:
- **Performance Classification**: Excellent (80%+), Good (60-79%), Needs Improvement (<60%)
- **Study Focus**: Identifies specific topics for review
- **Next Steps**: Suggests appropriate learning paths
- **Progress Tracking**: Shows improvement over time

================================================================================
                                ERROR HANDLING
================================================================================

STANDARD ERROR RESPONSE FORMAT
------------------------------
{
    "success": false,
    "message": "Error description",
    "data": null
}

COMMON ERROR SCENARIOS
----------------------
1. **No Active Session**: When trying to get questions or submit answers without starting a quiz
2. **Invalid Answer Format**: When answer is not A, B, C, or D
3. **Database Connection Issues**: When database is unavailable
4. **No Questions Available**: When database has no questions for the quiz
5. **Session Already Ended**: When trying to end an already completed quiz

HTTP STATUS CODES
-----------------
- 200: Success
- 400: Bad Request (invalid input, no active session)
- 500: Internal Server Error (database issues, system errors)

================================================================================
                                USAGE EXAMPLES
================================================================================

COMPLETE QUIZ FLOW
------------------
1. Start Quiz:
   POST /ai-agents/round1/start
   Body: {"max_questions": 12}

2. Get First Question:
   GET /ai-agents/round1/question

3. Submit Answer:
   POST /ai-agents/round1/answer
   Body: {"answer": "B"}

4. Continue with more questions (repeat steps 2-3)

5. Check Performance:
   GET /ai-agents/round1/performance

6. End Quiz (optional):
   POST /ai-agents/round1/end

CHAT-BASED INTERACTION
----------------------
The API is designed for chat-like interactions:

1. User: "Start quiz"
   ‚Üí POST /start

2. System: "Question 1: What is the capital of France?"
   ‚Üí GET /question

3. User: "B"
   ‚Üí POST /answer {"answer": "B"}

4. System: "‚úÖ Correct! Great job on this Geography question."
   ‚Üí Response includes feedback and next question

5. Continue until quiz completion

================================================================================
                                DATABASE SCHEMA
================================================================================

QUIZ_QUESTIONS TABLE
--------------------
- id: Primary key
- question: Question text
- option_a, option_b, option_c, option_d: Answer choices
- answer: Correct answer text
- topic: Question topic/category
- difficulty: Question difficulty level (easy/medium/hard)

The API specifically uses questions with difficulty = 'easy' for Round 1.

================================================================================
                                TECHNICAL NOTES
================================================================================

DEPENDENCIES
------------
- FastAPI: Web framework
- PostgreSQL: Database
- psycopg2: Database adapter
- Pydantic: Data validation

DATABASE CONNECTION
-------------------
- Uses connection pooling for better performance
- Automatic connection management with context managers
- Error handling with rollback on failures

SESSION MANAGEMENT
------------------
- In-memory session state (for single-user scenarios)
- Performance tracking persists throughout session
- Session can be reset while preserving performance history

SCALABILITY CONSIDERATIONS
--------------------------
- Current implementation uses in-memory state
- For multi-user scenarios, consider Redis or database-based session storage
- Database queries are optimized with proper indexing
- Connection pooling handles concurrent requests

================================================================================
                                VERSION INFO
================================================================================

API Version: 1.0
Last Updated: Current
Compatibility: FastAPI 0.68+, Python 3.8+

================================================================================
