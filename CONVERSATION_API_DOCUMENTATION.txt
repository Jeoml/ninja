================================================================================
AI CONVERSATION API DOCUMENTATION
================================================================================

BASE URL: https://ninja-production-8034.up.railway.app

OVERVIEW:
The AI Conversation API provides an intelligent adaptive assessment system that 
conducts complete interviews using a 6-node LangGraph workflow. The AI presents
questions, adapts to user performance, and provides comprehensive analysis.

================================================================================
MAIN CONVERSATION ENDPOINT
================================================================================

URL: POST /ai-agents/langgraph/start-quiz
DESCRIPTION: Starts a complete AI-powered conversation/assessment session
CONTENT-TYPE: application/json

HOW IT WORKS:
1. You send ONE request to start the conversation
2. AI conducts a complete interview (2-5 minutes)
3. Returns comprehensive results with analysis

REQUEST FORMAT:
{
  "user_id": "string"  // Optional user identifier
}

EXAMPLE REQUEST:
POST https://ninja-production-8034.up.railway.app/ai-agents/langgraph/start-quiz
Content-Type: application/json

{
  "user_id": "frontend_user_123"
}

RESPONSE FORMAT:
{
  "success": boolean,
  "message": "string",
  "data": {
    "session_id": "string",              // Unique conversation session
    "questions_asked": integer,          // Total questions in conversation
    "topics_covered": ["string"],        // Topics discussed
    "performance_summary": {             // Detailed performance analysis
      "session_id": "string",
      "total_responses": integer,
      "correct_responses": integer,
      "accuracy": float,                 // 0.0 - 1.0
      "avg_response_time": float|null,
      "topic_breakdown": [
        {
          "topic": "string",
          "difficulty": "string",        // "easy", "medium", "hard"
          "total_questions": integer,
          "correct_answers": integer,
          "accuracy": float,
          "avg_response_time": float|null
        }
      ]
    },
    "user_summary": {                    // AI-generated user profile
      "cognitive_profile": "string",     // Thinking patterns analysis
      "learning_style": "string",        // Preferred learning approach
      "knowledge_gaps": "string",        // Areas needing improvement
      "strengths_analysis": "string",    // Key strengths identified
      "improvement_recommendations": "string",  // Actionable advice
      "skill_level_assessment": "string",      // Overall skill level
      "executive_summary": "string"            // Manager-friendly summary
    },
    "question_generation_result": {      // Questionnaire improvement
      "success": boolean,
      "generated_count": integer,        // New questions created
      "saved_count": integer,           // Questions added to database
      "analysis": object                // Performance analysis used
    },
    "node_history": ["string"]          // Conversation workflow path
  }
}

EXAMPLE SUCCESSFUL RESPONSE:
{
  "success": true,
  "message": "Quiz completed successfully!",
  "data": {
    "session_id": "session_abc123",
    "questions_asked": 14,
    "topics_covered": ["Shortcuts", "Data", "Charts", "General", "Formulas"],
    "performance_summary": {
      "session_id": "session_abc123",
      "total_responses": 14,
      "correct_responses": 8,
      "accuracy": 0.5714285714285714,
      "avg_response_time": null,
      "topic_breakdown": [
        {
          "topic": "Shortcuts",
          "difficulty": "easy",
          "total_questions": 3,
          "correct_answers": 2,
          "accuracy": 0.6666666666666666,
          "avg_response_time": null
        },
        {
          "topic": "Charts",
          "difficulty": "medium",
          "total_questions": 2,
          "correct_answers": 0,
          "accuracy": 0.0,
          "avg_response_time": null
        }
      ]
    },
    "user_summary": {
      "cognitive_profile": "Demonstrates systematic approach with strong visual-spatial reasoning. Shows consistent problem-solving methodology across different question types.",
      "learning_style": "Prefers structured, step-by-step learning with visual aids. Benefits from examples and practical applications rather than theoretical concepts.",
      "knowledge_gaps": "Requires foundational work in data analysis and formula application. Shows gaps in intermediate-level chart interpretation and advanced shortcuts.",
      "strengths_analysis": "Excellent basic chart interpretation skills and logical reasoning. Strong foundational knowledge in visual data representation.",
      "improvement_recommendations": "Focus on data manipulation exercises and formula practice. Consider targeted training in advanced Excel functions and chart analysis.",
      "skill_level_assessment": "Intermediate level with strong foundational skills. Ready for advanced topics with additional practice in weak areas.",
      "executive_summary": "User demonstrates strong analytical thinking with solid foundational skills. Shows potential for advanced training with targeted improvement in data analysis and technical functions."
    },
    "question_generation_result": {
      "success": true,
      "generated_count": 5,
      "saved_count": 5,
      "analysis": {
        "strengths": ["Charts"],
        "weaknesses": ["Data", "Formulas"],
        "total_responses": 14
      }
    },
    "node_history": [
      "node_1_initial_shortcuts",
      "node_2_check_response",
      "node_3a_correct_followup",
      "node_3b_topic_catalog",
      "node_4_select_new_topic",
      "node_5_ask_question",
      "node_6_generate_questions_and_summary"
    ]
  }
}

ERROR RESPONSE:
{
  "success": false,
  "message": "Failed to run quiz: [error details]",
  "data": null
}

ERROR CODES:
- 500: Internal server error (AI service down, database issues)
- 502: Bad Gateway (service startup issues)
- 422: Invalid request body format

================================================================================
CONVERSATION WORKFLOW EXPLANATION
================================================================================

The AI conversation follows this 6-node workflow:

1. INITIAL QUESTION (Node 1):
   - AI asks one "Shortcuts" question (easy difficulty)
   - Records your response in database

2. RESPONSE CHECK (Node 2):
   - AI retrieves and analyzes your response
   - Determines if answer was correct

3A. CORRECT FOLLOWUP (Node 3A):
   - If you answered correctly: AI asks 2 easy + 2 medium questions on same topic
   - Tests depth of knowledge in your strong areas

3B. TOPIC ANALYSIS (Node 3B):
   - AI gets catalog of all available topics
   - Filters out topics already covered

4. NEW TOPIC SELECTION (Node 4):
   - AI randomly selects from remaining topics
   - Ensures diverse coverage

5. ADAPTIVE QUESTIONING (Node 5):
   - AI asks easy question on selected topic
   - If correct ‚Üí go to Node 3A (deep dive)
   - If incorrect ‚Üí go to Node 3B (try new topic)

6. ANALYSIS & IMPROVEMENT (Node 6):
   - AI analyzes all your responses
   - Generates 5 new questions based on your performance
   - Creates comprehensive user profile
   - Saves improvements to database

CONVERSATION CONTINUES UNTIL:
- 25 questions have been asked (max limit)
- No more topics/questions available
- AI completes full analysis

================================================================================
CONVERSATION CHARACTERISTICS
================================================================================

CONVERSATION TYPE: Complete Assessment (Not Real-Time Chat)
DURATION: 2-5 minutes (synchronous execution)
INTERACTION: Single request ‚Üí Complete conversation ‚Üí Full results

AI BEHAVIOR:
- Presents questions in engaging, supportive manner
- Provides encouraging feedback without revealing answers
- Adapts difficulty based on your performance
- Maintains interview integrity (no answer exposure)

USER EXPERIENCE:
- AI asks questions conversationally
- You respond with A, B, C, or D choices
- AI provides supportive feedback
- Conversation flows naturally through topics
- Ends with comprehensive analysis

================================================================================
FRONTEND INTEGRATION EXAMPLES
================================================================================

JAVASCRIPT/FETCH EXAMPLE:
```javascript
// Start AI conversation
async function startAIConversation(userId) {
  try {
    const response = await fetch('https://ninja-production-8034.up.railway.app/ai-agents/langgraph/start-quiz', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        user_id: userId
      })
    });

    const result = await response.json();

    if (result.success) {
      console.log('üéâ Conversation completed!');
      
      // Display results
      displayConversationResults(result.data);
      
      return result.data;
    } else {
      console.error('‚ùå Conversation failed:', result.message);
      return null;
    }
  } catch (error) {
    console.error('‚ùå Network error:', error);
    return null;
  }
}

function displayConversationResults(data) {
  console.log(`üìä Assessment Summary:`);
  console.log(`Session ID: ${data.session_id}`);
  console.log(`Questions Asked: ${data.questions_asked}`);
  console.log(`Accuracy: ${(data.performance_summary.accuracy * 100).toFixed(1)}%`);
  console.log(`Topics Covered: ${data.topics_covered.join(', ')}`);
  
  // Display AI-generated user profile
  console.log(`\nüß† AI Analysis:`);
  console.log(`Cognitive Profile: ${data.user_summary.cognitive_profile}`);
  console.log(`Learning Style: ${data.user_summary.learning_style}`);
  console.log(`Recommendations: ${data.user_summary.improvement_recommendations}`);
}

// Usage
startAIConversation('user_123');
```

REACT EXAMPLE:
```jsx
import React, { useState } from 'react';

function AIConversation() {
  const [loading, setLoading] = useState(false);
  const [results, setResults] = useState(null);

  const startConversation = async () => {
    setLoading(true);
    
    try {
      const response = await fetch('https://ninja-production-8034.up.railway.app/ai-agents/langgraph/start-quiz', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_id: 'react_user' })
      });

      const data = await response.json();
      
      if (data.success) {
        setResults(data.data);
      }
    } catch (error) {
      console.error('Conversation error:', error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <button onClick={startConversation} disabled={loading}>
        {loading ? 'AI is conducting assessment...' : 'Start AI Conversation'}
      </button>
      
      {results && (
        <div>
          <h3>üéØ Assessment Results</h3>
          <p>Questions: {results.questions_asked}</p>
          <p>Accuracy: {(results.performance_summary.accuracy * 100).toFixed(1)}%</p>
          <p>AI Profile: {results.user_summary.executive_summary}</p>
        </div>
      )}
    </div>
  );
}
```

================================================================================
CONVERSATION TIMELINE
================================================================================

TYPICAL CONVERSATION FLOW:

00:00 - Frontend sends POST request
00:01 - AI starts with Shortcuts question
00:30 - User responds, AI analyzes
01:00 - AI asks followup questions (if correct)
01:30 - AI selects new topic
02:00 - AI continues adaptive questioning
02:30 - AI reaches question limit or completes topics
03:00 - AI analyzes all responses
03:30 - AI generates new questions for database
04:00 - AI creates comprehensive user profile
04:30 - Complete results returned to frontend

TOTAL DURATION: 2-5 minutes (depends on question count and AI processing)

================================================================================
CONVERSATION CONTENT EXAMPLES
================================================================================

EXAMPLE AI QUESTION PRESENTATION:
"Here's your question! Let's see how you do. üòä

**Question:** What is the keyboard shortcut to select all cells in a worksheet?

**Options:**
A) Ctrl + A
B) Ctrl + S  
C) Ctrl + C
D) Ctrl + Z

Choose your answer (A, B, C, or D)! I'm excited to see what you pick! üí™"

EXAMPLE AI FEEDBACK (NO ANSWERS REVEALED):
"Great effort! I love how you're diving into learning and exploring shortcuts‚Äîit's a fantastic skill to develop. Every challenge is just a stepping stone to growth! üåü Keep experimenting and trusting your process; you're on the right track."

EXAMPLE AI FINAL SUMMARY:
"üåü Congratulations on completing the assessment! You demonstrated strong analytical thinking with solid foundational skills in chart interpretation. Your systematic approach to problem-solving really showed through. I recommend focusing on data manipulation exercises to complement your visual analysis strengths. You're ready for intermediate-level challenges! üöÄ"

================================================================================
IMPORTANT NOTES
================================================================================

üîÑ CONVERSATION TYPE:
- This is a COMPLETE ASSESSMENT, not real-time chat
- Single API call handles entire conversation
- AI manages the full interview process internally

‚è±Ô∏è TIMING EXPECTATIONS:
- Request duration: 2-5 minutes
- Synchronous execution
- No real-time message streaming
- Frontend should show "Assessment in progress..." during call

ü§ñ AI BEHAVIOR:
- Engaging, supportive conversation style
- Never reveals correct answers (maintains assessment integrity)
- Adapts question difficulty based on performance
- Provides encouraging feedback throughout

üíæ DATA PERSISTENCE:
- All responses stored in database as JSON
- Session tracking with unique identifiers
- User profiles saved for future reference
- New questions generated and added to database

üéØ CONVERSATION OUTCOMES:
- Performance metrics by topic and difficulty
- AI-generated psychological profile
- Learning style identification
- Personalized improvement recommendations
- Skill level assessment

================================================================================
TROUBLESHOOTING
================================================================================

COMMON ISSUES:

1. "502 Bad Gateway"
   - Service may be starting up (wait 30 seconds)
   - Check Railway deployment status
   - Verify GROQ_API_KEY is set in environment

2. "CORS Error"
   - Ensure frontend URL is in allowed origins
   - Check that preflight OPTIONS request succeeds
   - Verify request headers include Content-Type

3. "Conversation timeout"
   - Increase frontend timeout to 5-10 minutes
   - Check Railway service logs for errors
   - Verify backend service connectivity

4. "AI responses missing"
   - Check GROQ_API_KEY environment variable
   - Verify Groq API quota/limits
   - Check for model availability issues

DEBUGGING ENDPOINTS:
- GET /health - Service health check
- GET /cors-test - CORS configuration test
- GET /ai-agents/langgraph/info - Agent information

================================================================================
CONVERSATION FLOW SUMMARY
================================================================================

FRONTEND PERSPECTIVE:
1. User clicks "Start Assessment" button
2. Frontend shows "AI is conducting assessment..." 
3. Single API call to start-quiz endpoint
4. Wait 2-5 minutes for complete conversation
5. Display comprehensive results to user

AI PERSPECTIVE:
1. Receives user_id from frontend
2. Starts 6-node conversation workflow
3. Asks adaptive questions using Groq AI
4. Records all responses in database
5. Analyzes performance patterns
6. Generates user profile and new questions
7. Returns complete conversation results

USER EXPERIENCE:
- Feels like natural conversation with AI interviewer
- Questions presented engagingly by AI
- Supportive feedback without answer revelation
- Comprehensive analysis at the end
- Personalized recommendations for improvement

================================================================================
END OF DOCUMENTATION
================================================================================
